---
apiVersion: controllers.trishanku.org.trishanku.org/v1alpha1
kind: TrishankuHeaven
metadata:
  labels:
    app.kubernetes.io/name: trishankuheaven
    app.kubernetes.io/instance: sample-k8s
    app.kubernetes.io/part-of: trishanku-controller
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: trishanku-controller
  name: sample-k8s
spec:
  skip:
    app: true
 
---
apiVersion: controllers.trishanku.org.trishanku.org/v1alpha1
kind: TrishankuHeaven
metadata:
  labels:
    app.kubernetes.io/name: trishankuheaven
    app.kubernetes.io/instance: sample-k8s-kcm
    app.kubernetes.io/part-of: trishanku-controller
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: trishanku-controller
  name: sample-k8s-kcm
spec:
  skip:
    entrypoints: true
  certificates:
    certificateAuthoritySecretName: sample-k8s-cert-ca
    serviceAccountsSecretName: sample-k8s-cert-service-account
    kubernetesSecretName: sample-k8s-cert-kubernetes
    adminSecretName: sample-k8s-admin
    controller:
      secretName: sample-k8s-kcm
      userName: system:kube-controller-manager
      groupName: system:kube-controller-manager
  eventsEtcd:
    local: {}
  gitcd:
    credentialsSecretName: git-cred
    imagePullSecretName: gar-cred
    gitcdImage:
      imagePullPolicy: Always
    git:
      branches:
        data: kcm/data
        metadata: kcm/metadata
      remotes:
      - name: origin
        repo: https://github.com/trishanku-org/sample-k8s
        branches:
          data: upstream/data
          metadata: upstream/metadata
    pull:
      pushAfterMerge: true
      pushOnPullFailure: true
      tickerDuration: 15s
  app:
    replicas: 1
    entrypointsConfigMapName: sample-k8s-entrypoints
    podTemplate:
      metadata:
        annotations:
          from: trishanku
          app.kubernetes.io/instance: sample-k8s-kcm
        labels:
          from: trishanku
          app.kubernetes.io/instance: sample-k8s-kcm
      spec:
        automountServiceAccountToken: false
        containers:
        - name: kcm
          image: registry.k8s.io/kube-controller-manager:v1.24.4
          imagePullPolicy: IfNotPresent
          command:
          - kube-controller-manager
          - --bind-address=0.0.0.0
          - --cluster-cidr=10.200.0.0/16
          - --cluster-name=kubernetes
          - --cluster-signing-cert-file=/trishanku/certs/ca/tls.crt
          - --cluster-signing-key-file=/trishanku/certs/ca/tls.key
          - --kubeconfig=/trishanku/certs/kcm/kubeconfig
          - --leader-elect=false
          - --root-ca-file=/trishanku/certs/ca/tls.crt
          - --service-account-private-key-file=/trishanku/certs/sa/tls.key
          - --service-cluster-ip-range=10.32.0.0/24
          - --use-service-account-credentials=true
          - --concurrent-deployment-syncs=1
          - --concurrent-endpoint-syncs=1
          - --concurrent-service-endpoint-syncs=1
          - --concurrent-gc-syncs=1
          - --concurrent-namespace-syncs=1
          - --concurrent-replicaset-syncs=1
          - --concurrent-rc-syncs=1
          - --concurrent-resource-quota-syncs=1
          - --concurrent-service-syncs=1
          - --concurrent-serviceaccount-token-syncs=1
          - --concurrent-statefulset-syncs=1
          - --concurrent-ttl-after-finished-syncs=1
          - --v=2
          volumeMounts:
          - name: ca
            mountPath: /trishanku/certs/ca
          - name: sa
            mountPath: /trishanku/certs/sa
          - name: kcm
            mountPath: /trishanku/certs/kcm
        volumes:
        - name: ca
          secret:
            secretName: sample-k8s-cert-ca
        - name: sa
          secret:
            secretName: sample-k8s-cert-service-account
        - name: kcm
          secret:
            secretName: sample-k8s-kcm

---
apiVersion: controllers.trishanku.org.trishanku.org/v1alpha1
kind: TrishankuHeaven
metadata:
  labels:
    app.kubernetes.io/name: trishankuheaven
    app.kubernetes.io/instance: sample-k8s-kube-scheduler
    app.kubernetes.io/part-of: trishanku-controller
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: trishanku-controller
  name: sample-k8s-kube-scheduler
spec:
  skip:
    entrypoints: true
  certificates:
    certificateAuthoritySecretName: sample-k8s-cert-ca
    serviceAccountsSecretName: sample-k8s-cert-service-account
    kubernetesSecretName: sample-k8s-cert-kubernetes
    adminSecretName: sample-k8s-admin
    controller:
      secretName: sample-k8s-kube-scheduler
      userName: system:kube-scheduler
      groupName: system:kube-scheduler
  eventsEtcd:
    local: {}
  gitcd:
    credentialsSecretName: git-cred
    imagePullSecretName: gar-cred
    gitcdImage:
      imagePullPolicy: Always
    git:
      branches:
        data: scheduler/data
        metadata: scheduler/metadata
      remotes:
      - name: origin
        repo: https://github.com/trishanku-org/sample-k8s
        branches:
          data: upstream/data
          metadata: upstream/metadata
          failOnNoBranch: true
    pull:
      pushAfterMerge: true
      pushOnPullFailure: true
      tickerDuration: 15s
  app:
    replicas: 1
    entrypointsConfigMapName: sample-k8s-entrypoints
    kubeconfigMountPath: /trishanku/kubeconfig
    podTemplate:
      metadata:
        annotations:
          from: trishanku
          app.kubernetes.io/instance: sample-k8s-kube-scheduler
        labels:
          from: trishanku
          app.kubernetes.io/instance: sample-k8s-kube-scheduler
      spec:
        automountServiceAccountToken: false
        containers:
        - name: kube-scheduler
          image: registry.k8s.io/kube-scheduler:v1.24.4
          imagePullPolicy: IfNotPresent
          command:
          - kube-scheduler
          - --config=/configs/kube-scheduler-config.yaml
          - --v=4
          volumeMounts:
          - name: configs
            mountPath: /configs
        volumes:
        - name: configs
          configMap:
            name: sample-k8s-kube-scheduler

---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: trishankuheaven
    app.kubernetes.io/instance: sample-k8s-kube-scheduler
    app.kubernetes.io/part-of: trishanku-controller
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: trishanku-controller
  name: sample-k8s-kube-scheduler
data:
  kube-scheduler-config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1beta3
    kind: KubeSchedulerConfiguration
    clientConnection:
      kubeconfig: /trishanku/kubeconfig
    leaderElection:
      leaderElect: false
    parallelism: 1

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: trishankuheaven
    app.kubernetes.io/instance: sample-k8s-mcm-crds
    app.kubernetes.io/part-of: trishanku-controller
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: trishanku-controller
  name: sample-k8s-mcm-crds
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: trishankuheaven
    app.kubernetes.io/instance: sample-k8s-mcm-crds
    app.kubernetes.io/part-of: trishanku-controller
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: trishanku-controller
  name: sample-k8s-mcm-crds
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - pods/portforward
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: trishankuheaven
    app.kubernetes.io/instance: sample-k8s-mcm-crds
    app.kubernetes.io/part-of: trishanku-controller
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: trishanku-controller
  name: sample-k8s-mcm-crds
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sample-k8s-mcm-crds
subjects:
- kind: ServiceAccount
  name: sample-k8s-mcm-crds

---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/name: trishankuheaven
    app.kubernetes.io/instance: sample-k8s-mcm-crds
    app.kubernetes.io/part-of: trishanku-controller
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: trishanku-controller
  name: sample-k8s-mcm-crds
spec:
  template:
    metadata:
      annotations:
        from: trishanku
        app.kubernetes.io/instance: sample-k8s-mcm-crds
      labels:
        from: trishanku
        app.kubernetes.io/instance: sample-k8s-mcm-crds
    spec:
      serviceAccountName: sample-k8s-mcm-crds
      automountServiceAccountToken: true
      restartPolicy: OnFailure
      containers:
      - name: kubectl
        image: bitnami/kubectl:1.24.4
        imagePullPolicy: IfNotPresent
        command:
        - /trishanku/entrypoint/entrypoint.sh
        env:
        - name: TRISHANKU_DEPLOYMENT
          value: sample-k8s-kcm-heaven
        - name: TRISHANKU_KUBECONFIG
          value: /trishanku/certs/admin/kubeconfig
        - name: MCM_VERSION
          value: v0.49.3
        volumeMounts:
        - name: admin
          mountPath: /trishanku/certs/admin
        - name: entrypoint
          mountPath: /trishanku/entrypoint
      volumes:
      - name: admin
        secret:
          secretName: sample-k8s-admin
      - name: entrypoint
        configMap:
          name: sample-k8s-mcm-crds-entrypoint
          defaultMode: 0755

---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: trishankuheaven
    app.kubernetes.io/instance: sample-k8s-mcm-crds-entrypoint
    app.kubernetes.io/part-of: trishanku-controller
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: trishanku-controller
  name: sample-k8s-mcm-crds-entrypoint
data:
  entrypoint.sh: |
    #!/bin/bash
    set -x

    kubectl port-forward deploy/${TRISHANKU_DEPLOYMENT} 6443:6443 &
    echo "Waiting for port-forwarding to setup..." \
      && sleep 5 \
      && kubectl --kubeconfig ${TRISHANKU_KUBECONFIG} cluster-info \
      && kubectl --kubeconfig ${TRISHANKU_KUBECONFIG} apply \
        -f https://raw.githubusercontent.com/gardener/machine-controller-manager/${MCM_VERSION}/kubernetes/crds/machine.sapcloud.io_machineclasses.yaml \
        -f https://raw.githubusercontent.com/gardener/machine-controller-manager/${MCM_VERSION}/kubernetes/crds/machine.sapcloud.io_machines.yaml \
        -f https://raw.githubusercontent.com/gardener/machine-controller-manager/${MCM_VERSION}/kubernetes/crds/machine.sapcloud.io_machinesets.yaml \
        -f https://raw.githubusercontent.com/gardener/machine-controller-manager/${MCM_VERSION}/kubernetes/crds/machine.sapcloud.io_machinedeployments.yaml \
        -f https://raw.githubusercontent.com/gardener/machine-controller-manager/${MCM_VERSION}/kubernetes/crds/machine.sapcloud.io_scales.yaml \
        -f https://raw.githubusercontent.com/gardener/machine-controller-manager/master/kubernetes/deployment/out-of-tree/control-cluster-role.yaml \
        -f https://raw.githubusercontent.com/gardener/machine-controller-manager/master/kubernetes/deployment/out-of-tree/target-cluster-role.yaml \
      && kubectl --kubeconfig ${TRISHANKU_KUBECONFIG} apply -f - <<EOF
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: machine-controller-manager-control
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: machine-controller-manager-control
    subjects:
    - apiGroup: rbac.authorization.k8s.io
      kind: Group
      name: system:machine-controller-manager
    EOF

    kubectl --kubeconfig ${TRISHANKU_KUBECONFIG} apply -f - <<EOF
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: machine-controller-manager-target
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: machine-controller-manager-target
    subjects:
    - apiGroup: rbac.authorization.k8s.io
      kind: Group
      name: system:machine-controller-manager
    EOF

    kubectl get secret gcp-cred -oyaml | grep -v creationTimestamp | grep -v resourceVersion | grep -v uid - \
      | kubectl --kubeconfig ${TRISHANKU_KUBECONFIG} apply -f -

    kubectl --kubeconfig ${TRISHANKU_KUBECONFIG} apply -f - <<EOF
    ---
    apiVersion: machine.sapcloud.io/v1alpha1
    kind: MachineClass
    metadata:
      name: test-mc
      namespace: default
    provider: GCP
    providerSpec:
      canIpForward: true
      deletionProtection: false
      description: Machine of shoot ash created by Machine-Controller-Manager.
      disks:
      - autoDelete: true
        boot: true
        sizeGb: 20
        type: pd-standard
        image: projects/debian-cloud/global/images/debian-11-bullseye-v20230809
        labels:
          name: test-mc
      labels:
      name: test-mc
      machineType: n1-standard-1
      metadata:
      - key: ark
        value: my-value
      networkInterfaces:
      - network: default
        subnetwork: default
      scheduling:
        automaticRestart: true
        onHostMaintenance: MIGRATE
        preemptible: false
      secretRef:
        name: gcp-cred
        namespace: default
      serviceAccounts:
      - email: 690389152695-compute@developer.gserviceaccount.com
        scopes:
        - https://www.googleapis.com/auth/compute
      tags:
      - kubernetes-io-cluster-test-mc
      - kubernetes-io-role-mcm
      - test-mc
      region: asia-south1
      zone: asia-south1-a
    secretRef:
      name: gcp-cred
      namespace: default
    EOF

    kubectl --kubeconfig ${TRISHANKU_KUBECONFIG} apply -f - <<EOF
    ---
    apiVersion: machine.sapcloud.io/v1alpha1
    kind: Machine
    metadata:
      name: test-machine
      namespace: default
    spec:
      class:
        kind: MachineClass
        name: test-mc
    EOF

---
apiVersion: controllers.trishanku.org.trishanku.org/v1alpha1
kind: TrishankuHeaven
metadata:
  labels:
    app.kubernetes.io/name: trishankuheaven
    app.kubernetes.io/instance: sample-k8s-mcm
    app.kubernetes.io/part-of: trishanku-controller
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: trishanku-controller
  name: sample-k8s-mcm
spec:
  skip:
    entrypoints: true
  certificates:
    certificateAuthoritySecretName: sample-k8s-cert-ca
    serviceAccountsSecretName: sample-k8s-cert-service-account
    kubernetesSecretName: sample-k8s-cert-kubernetes
    adminSecretName: sample-k8s-admin
    controller:
      secretName: sample-k8s-mcm
      userName: system:machine-controller-manager
      groupName: system:machine-controller-manager
  eventsEtcd:
    local: {}
  gitcd:
    credentialsSecretName: git-cred
    imagePullSecretName: gar-cred
    gitcdImage:
      imagePullPolicy: Always
    git:
      branches:
        data: mcm/data
        metadata: mcm/metadata
      remotes:
      - name: origin
        repo: https://github.com/trishanku-org/sample-k8s
        branches:
          data: upstream/data
          metadata: upstream/metadata
          failOnNoBranch: true
    pull:
      pushAfterMerge: true
      pushOnPullFailure: true
      tickerDuration: 15s
  app:
    replicas: 1
    entrypointsConfigMapName: sample-k8s-entrypoints
    podTemplate:
      metadata:
        annotations:
          from: trishanku
          app.kubernetes.io/instance: sample-k8s-mcm
        labels:
          from: trishanku
          app.kubernetes.io/instance: sample-k8s-mcm
      spec:
        automountServiceAccountToken: false
        containers:
        - name: mcm
          image: asia-south1-docker.pkg.dev/trishanku/trishanku/machine-controller-manager:v0.49.3
          imagePullPolicy: IfNotPresent
          command:
          - ./machine-controller-manager
          - --control-kubeconfig=/trishanku/certs/mcm/kubeconfig
          - --target-kubeconfig=/trishanku/certs/mcm/kubeconfig
          - --leader-elect=false
          - --cloud-provider=gcp
          - --concurrent-syncs=1
          - --v=2
          volumeMounts:
          - name: ca
            mountPath: /trishanku/certs/ca
          - name: mcm
            mountPath: /trishanku/certs/mcm
        volumes:
        - name: ca
          secret:
            secretName: sample-k8s-cert-ca
        - name: mcm
          secret:
            secretName: sample-k8s-mcm

---
apiVersion: controllers.trishanku.org.trishanku.org/v1alpha1
kind: TrishankuHeaven
metadata:
  labels:
    app.kubernetes.io/name: trishankuheaven
    app.kubernetes.io/instance: sample-k8s-mc
    app.kubernetes.io/part-of: trishanku-controller
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/created-by: trishanku-controller
  name: sample-k8s-mc
spec:
  skip:
    entrypoints: true
  certificates:
    certificateAuthoritySecretName: sample-k8s-cert-ca
    serviceAccountsSecretName: sample-k8s-cert-service-account
    kubernetesSecretName: sample-k8s-cert-kubernetes
    adminSecretName: sample-k8s-admin
    controller:
      secretName: sample-k8s-mc
      userName: system:machine-controller
      groupName: system:machine-controller-manager
  eventsEtcd:
    local: {}
  gitcd:
    credentialsSecretName: git-cred
    imagePullSecretName: gar-cred
    gitcdImage:
      imagePullPolicy: Always
    git:
      branches:
        data: mc/data
        metadata: mc/metadata
      remotes:
      - name: origin
        repo: https://github.com/trishanku-org/sample-k8s
        branches:
          data: upstream/data
          metadata: upstream/metadata
          failOnNoBranch: true
    pull:
      pushAfterMerge: true
      pushOnPullFailure: true
      tickerDuration: 15s
  app:
    replicas: 1
    entrypointsConfigMapName: sample-k8s-entrypoints
    podTemplate:
      metadata:
        annotations:
          from: trishanku
          app.kubernetes.io/instance: sample-k8s-mc
        labels:
          from: trishanku
          app.kubernetes.io/instance: sample-k8s-mc
      spec:
        automountServiceAccountToken: false
        containers:
        - name: mc
          image: asia-south1-docker.pkg.dev/trishanku/trishanku/machine-controller-manager-provider-gcp:v0.16.0
          imagePullPolicy: IfNotPresent
          command:
          - ./machine-controller
          - --control-kubeconfig=/trishanku/certs/mc/kubeconfig
          - --target-kubeconfig=/trishanku/certs/mc/kubeconfig
          - --leader-elect=false
          - --cloud-provider=gcp
          - --concurrent-syncs=1
          - --machine-drain-timeout=6h
          - --machine-creation-timeout=20m
          - --machine-health-timeout=3h
          - --machine-pv-detach-timeout=15m
          - --machine-pv-reattach-timeout=10m
          - --machine-safety-apiserver-statuscheck-period=10m
          - --machine-safety-orphan-vms-period=1h
          - --v=2
          volumeMounts:
          - name: ca
            mountPath: /trishanku/certs/ca
          - name: mc
            mountPath: /trishanku/certs/mc
        volumes:
        - name: ca
          secret:
            secretName: sample-k8s-cert-ca
        - name: mc
          secret:
            secretName: sample-k8s-mc
