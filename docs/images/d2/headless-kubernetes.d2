# ! d2 --sketch --bundle --animate-interval=7000  headless-kubernetes.d2 ../svg/headless-kubernetes.svg
direction: down

classes: {
  kubernetes: {
    icon: https://upload.wikimedia.org/wikipedia/commons/3/39/Kubernetes_logo_without_workmark.svg
  }
  apiserver: {
    icon: https://raw.githubusercontent.com/kubernetes/community/master/icons/svg/control_plane_components/labeled/api.svg
  }
  deploy: {
    icon: https://raw.githubusercontent.com/kubernetes/community/master/icons/png/resources/labeled/deploy-128.png
  }
  node: {
    icon: https://raw.githubusercontent.com/kubernetes/community/master/icons/png/infrastructure_components/labeled/node-128.png
  }
  kubelet: {
    icon: https://raw.githubusercontent.com/kubernetes/community/master/icons/png/control_plane_components/labeled/kubelet-128.png
  }
  pod: {
    icon: https://raw.githubusercontent.com/kubernetes/community/master/icons/png/resources/labeled/pod-128.png
  }
  crd: {
    icon: https://raw.githubusercontent.com/kubernetes/community/master/icons/png/resources/labeled/crd-128.png
  }
  etcd: {
    icon: https://raw.githubusercontent.com/etcd-io/etcd/main/logos/etcd-glyph-color.png
  }
  git: {
    icon: https://git-scm.com/images/logos/downloads/Git-Icon-1788C.png
  }
  dashed_package: {
    shape: package
    style: {stroke-dash: 3}
  }
  branch: {
    shape: stored_data
    icon: ../png/9026745_git_branch_thin_icon.png
  }
}

steps: {
  1: {
    hc: Host Cluster {
      class: kubernetes

      api: kube-apiserver {class: apiserver}
      dc: Deployment Controller {class: deploy}
      dc -> api

      node: Node {
        class: node

        kubelet: {class: kubelet}
        kubelet -> _.api
      }
    }
  }
  2: {
    hc.dc.tc: TrishankuHeaven Controller {
      class: deploy
      style: {fill: orange}
    }
  }
  3: {
    hc.dc.tc.style.fill: transparent

    hc.node.tc: TrishankuHeaven Controller {
      class: pod
      style: {fill: orange}
    }
    hc.node.tc -> hc.api
  }
  4: {
    hc.node.tc.style.fill: transparent

    upstream: {
      shape: cylinder
      class: git
      style: {fill: orange}
    }
  }
  5: {
    upstream.style.fill: transparent

    hc.node.tc.kcm: kube-controller-manager {
      class: crd
      style: {fill: orange}
    }
  }
  6: {
    hc.node.tc.kcm.style.fill: transparent

    hc.dc.kcm: kube-controller-manager {
      class: deploy
      style: {fill: orange}
    }
  }
  7: {
    hc.dc.kcm.style.fill: transparent

    hc.node.kcm: kube-controller-manager {
      class: pod
      style: {fill: orange}
    }
  }
  8: {
    hc.node.kcm.style.fill: transparent

    hc.node.kcm.events etcd: {
      class: etcd
      style: {fill: orange}
    }
    hc.node.kcm.gitcd: {
      class: etcd
      style: {fill: orange}

      git: {
        class: git
        shape: cylinder
      }
    }
    hc.node.kcm.gitcd-pr: {
      class: git
      style: {fill: orange}

      git: {
        class: git
        shape: cylinder
      }
    }
    hc.node.kcm.api: kube-apiserver {
      class: apiserver
      style: {fill: orange}
    }
    hc.node.kcm.kcm: kube-controller-manager {
      class: kubernetes
      style: {fill: orange}
    }

    hc.node.kcm.api -> hc.node.kcm.events etcd
    hc.node.kcm.api -> hc.node.kcm.gitcd
    hc.node.kcm.kcm -> hc.node.kcm.api
  }
  9: {
    hc.node.kcm.events etcd.style.fill: transparent
    hc.node.kcm.gitcd.style.fill: transparent
    hc.node.kcm.gitcd-pr.style.fill: transparent
    hc.node.kcm.api.style.fill: transparent
    hc.node.kcm.kcm.style.fill: transparent

    upstream.kcm: {
      class: dashed_package
      style: {fill: orange}

      data: {class: branch}
      metadata: {class: branch}
    }

    upstream.main: {
      class: dashed_package
      style: {fill: orange}

      data: {class: branch}
      metadata: {class: branch}
    }

    hc.node.kcm.gitcd <- upstream.main: fetch {style: {animated: true}}
    hc.node.kcm.gitcd -> upstream.kcm: push {style: {animated: true}}
    hc.node.kcm.gitcd-pr <- upstream.kcm: fetch {style: {animated: true}}
    hc.node.kcm.gitcd-pr -> upstream.main: push {style: {animated: true}}
  }
  10: {
    upstream.kcm.style.fill: transparent
    upstream.main.style.fill: transparent

    hc.node.tc.scheduler: kube-scheduler {
      class: crd
      style: {fill: orange}
    }
  }
  11: {
    hc.node.tc.scheduler.style.fill: transparent

    hc.dc.scheduler: kube-scheduler {
      class: deploy
      style: {fill: orange}
    }
  }
  12: {
    hc.dc.scheduler.style.fill: transparent

    hc.node.scheduler: kube-scheduler {
      class: pod
      style: {fill: orange}
    }
  }
  13: {
    hc.node.scheduler.style.fill: transparent

    hc.node.scheduler.events etcd: {
      class: etcd
      style: {fill: orange}
    }
    hc.node.scheduler.gitcd: {
      class: etcd
      style: {fill: orange}

      git: {
        class: git
        shape: cylinder
      }
    }
    hc.node.scheduler.gitcd-pr: {
      class: git
      style: {fill: orange}

      git: {
        class: git
        shape: cylinder
      }
    }
    hc.node.scheduler.api: kube-apiserver {
      class: apiserver
      style: {fill: orange}
    }
    hc.node.scheduler.scheduler: kube-scheduler {
      class: kubernetes
      style: {fill: orange}
    }

    hc.node.scheduler.api -> hc.node.scheduler.events etcd
    hc.node.scheduler.api -> hc.node.scheduler.gitcd
    hc.node.scheduler.scheduler -> hc.node.scheduler.api
  }
  14: {
    hc.node.scheduler.events etcd.style.fill: transparent
    hc.node.scheduler.gitcd.style.fill: transparent
    hc.node.scheduler.gitcd-pr.style.fill: transparent
    hc.node.scheduler.api.style.fill: transparent
    hc.node.scheduler.scheduler.style.fill: transparent

    upstream.scheduler: {
      class: dashed_package
      style: {fill: orange}

      data: {class: branch}
      metadata: {class: branch}
    }

    hc.node.scheduler.gitcd <- upstream.main: fetch {style: {animated: true}}
    hc.node.scheduler.gitcd -> upstream.scheduler: push
    hc.node.scheduler.gitcd-pr <- upstream.scheduler: fetch {style: {animated: true}}
    hc.node.scheduler.gitcd-pr -> upstream.main: push
  }
  15: {
    upstream.scheduler.style.fill: transparent

    node: VM {
      style: {fill: orange}
    }
  }
  16: {
    node.style.fill: transparent

    node.events etcd: {
      class: etcd
      style: {fill: orange}
    }
    node.gitcd: {
      class: etcd
      style: {fill: orange}

      git: {
        class: git
        shape: cylinder
      }
    }
    node.gitcd-pr: {
      class: git
      style: {fill: orange}

      git: {
        class: git
        shape: cylinder
      }
    }
    node.api: kube-apiserver {
      class: apiserver
      style: {fill: orange}
    }
    node.kubelet: kube-scheduler {
      class: kubelet
      style: {fill: orange}
    }

    node.api -> node.events etcd
    node.api -> node.gitcd
    node.kubelet -> node.api
  }
  17: {
    node.events etcd.style.fill: transparent
    node.gitcd.style.fill: transparent
    node.gitcd-pr.style.fill: transparent
    node.api.style.fill: transparent
    node.kubelet.style.fill: transparent

    upstream.kubelet: {
      class: dashed_package
      style: {fill: orange}

      data: {class: branch}
      metadata: {class: branch}
    }

    node.gitcd <- upstream.main: fetch {style: {animated: true}}
    node.gitcd -> upstream.kubelet: push {style: {animated: true}}
    node.gitcd-pr <- upstream.kubelet: fetch {style: {animated: true}}
    node.gitcd-pr -> upstream.main: push {style: {animated: true}}
  }
  18: {
    upstream.kubelet.style.fill: transparent

    node.label: Headless Node
    node.class: node
    node.style.fill: orange
  }
  19: {
    node.style.fill: transparent

    node.style.fill: lightgreen
    node.kubelet.style.fill: lightgreen
    hc.node.kcm.kcm.style.fill: lightgreen
    hc.node.scheduler.scheduler.style.fill: lightgreen
    upstream.style.fill: lightgreen
  }
}
